/* ===== FILM D√úNYASƒ± REKLAM Sƒ∞STEMƒ∞ JS ===== */

// Reklam Y√∂netim Sistemi
class AdManager {
    constructor() {
        this.init();
        this.setupEventListeners();
        this.startRotation();
    }

    init() {
        console.log('üé¨ Film D√ºnyasƒ± Reklam Sistemi Ba≈ülatƒ±ldƒ±');
        this.hideAdsOnMobile();
        this.setupPopupAd();
        this.trackAdViews();
        this.logCookieStatus();
    }

    // Cookie durumunu konsola yazdƒ±r (debug i√ßin)
    logCookieStatus() {
        const popupCookie = this.getCookie('filmdunyasi_popup_shown');
        const exitCookie = this.getCookie('filmdunyasi_exit_intent_shown');
        
        console.log('üç™ Cookie Durumu:');
        console.log(`   Popup: ${popupCookie ? 'Bug√ºn g√∂sterildi' : 'Hen√ºz g√∂sterilmedi'}`);
        console.log(`   Exit Intent: ${exitCookie ? 'Bug√ºn g√∂sterildi' : 'Hen√ºz g√∂sterilmedi'}`);
        
        if (popupCookie) {
            const date = new Date(parseInt(popupCookie));
            console.log(`   Son popup: ${date.toLocaleString('tr-TR')}`);
        }
    }

    // Mobilde sticky reklamƒ± gizle
    hideAdsOnMobile() {
        if (window.innerWidth <= 1024) {
            const stickyAd = document.querySelector('.ad-sticky-right');
            if (stickyAd) {
                stickyAd.style.display = 'none';
            }
        }
    }

    // Popup reklam sistemi
    setupPopupAd() {
        // Cookie kontrol√º - g√ºnde bir kez g√∂ster
        if (!this.hasSeenPopupToday()) {
            // 30 saniye sonra popup g√∂ster
            setTimeout(() => {
                this.showPopupAd();
            }, 30000);
        }
    }

    // Cookie kontrol fonksiyonlarƒ±
    hasSeenPopupToday() {
        const lastShown = this.getCookie('filmdunyasi_popup_shown');
        if (!lastShown) return false;
        
        const lastShownDate = new Date(parseInt(lastShown));
        const today = new Date();
        
        // Aynƒ± g√ºn m√º kontrol et
        return lastShownDate.toDateString() === today.toDateString();
    }

    setCookie(name, value, days = 1) {
        const expires = new Date();
        expires.setTime(expires.getTime() + (days * 24 * 60 * 60 * 1000));
        document.cookie = `${name}=${value};expires=${expires.toUTCString()};path=/`;
    }

    getCookie(name) {
        const nameEQ = name + "=";
        const ca = document.cookie.split(';');
        for(let i = 0; i < ca.length; i++) {
            let c = ca[i];
            while (c.charAt(0) === ' ') c = c.substring(1, c.length);
            if (c.indexOf(nameEQ) === 0) return c.substring(nameEQ.length, c.length);
        }
        return null;
    }

    showPopupAd() {
        // Cookie'ye bug√ºn√ºn tarihini kaydet
        this.setCookie('filmdunyasi_popup_shown', Date.now().toString(), 1);
        
        // Popup HTML'i olu≈ütur
        const popupHTML = `
            <div class="ad-popup-overlay" id="adPopup">
                <div class="ad-popup-content">
                    <button class="ad-popup-close" onclick="adManager.closePopup()">&times;</button>
                    <div style="text-align: center; padding: 20px;">
                        <h3 style="color: #e50914; margin-bottom: 15px;">üé∞ √ñzel Fƒ±rsat!</h3>
                        <p style="color: #ccc; margin-bottom: 20px;">
                            G√ºvenilir bahis sitesinde %100 ho≈ügeldin bonusu!
                        </p>
                        <button style="background: #e50914; color: white; border: none; padding: 12px 24px; border-radius: 6px; cursor: pointer; font-weight: bold;">
                            Hemen Katƒ±l
                        </button>
                        <p style="color: #666; font-size: 11px; margin-top: 15px;">
                            Bu mesaj g√ºnde sadece bir kez g√∂sterilir
                        </p>
                    </div>
                </div>
            </div>
        `;

        // Popup'ƒ± sayfaya ekle
        document.body.insertAdjacentHTML('beforeend', popupHTML);
        
        // Popup'ƒ± g√∂ster
        const popup = document.getElementById('adPopup');
        popup.style.display = 'flex';

        // 15 saniye sonra otomatik kapat (biraz daha uzun s√ºre)
        setTimeout(() => {
            this.closePopup();
        }, 15000);
        
        console.log('üéØ Popup reklam g√∂sterildi - Bir sonraki g√∂sterim: Yarƒ±n');
    }

    closePopup() {
        const popup = document.getElementById('adPopup');
        if (popup) {
            popup.style.display = 'none';
            popup.remove();
        }
    }

    // Reklam g√∂r√ºnt√ºleme takibi
    trackAdViews() {
        const ads = document.querySelectorAll('.ad-container');
        
        const observer = new IntersectionObserver((entries) => {
            entries.forEach(entry => {
                if (entry.isIntersecting) {
                    this.logAdView(entry.target);
                }
            });
        }, {
            threshold: 0.5 // %50 g√∂r√ºn√ºr olduƒüunda say
        });

        ads.forEach(ad => {
            observer.observe(ad);
        });
    }

    logAdView(adElement) {
        const adType = this.getAdType(adElement);
        console.log(`üìä Reklam G√∂r√ºnt√ºlendi: ${adType}`);
        
        // Burada ger√ßek projede analytics servisine g√∂nderebilirsiniz
        // Google Analytics, Facebook Pixel vb.
    }

    getAdType(element) {
        if (element.classList.contains('ad-header-banner')) return 'Header Banner';
        if (element.classList.contains('ad-large-banner')) return 'Large Banner';
        if (element.classList.contains('ad-sidebar')) return 'Sidebar';
        if (element.classList.contains('ad-content-between')) return 'Content Between';
        if (element.classList.contains('ad-native')) return 'Native Ad';
        if (element.classList.contains('ad-footer-banner')) return 'Footer Banner';
        if (element.classList.contains('ad-sticky-right')) return 'Sticky Right';
        return 'Unknown';
    }

    // Reklam rotasyonu
    startRotation() {
        // Native reklamlarƒ± her 60 saniyede bir deƒüi≈ütir
        setInterval(() => {
            this.rotateNativeAds();
        }, 60000);
    }

    rotateNativeAds() {
        const nativeAds = [
            {
                icon: 'üéÆ',
                title: 'En ƒ∞yi Oyun Deneyimi',
                description: 'Yeni nesil oyunlar ve en g√ºncel haberler i√ßin bizi takip edin. √ñzel indirimler ve kampanyalardan ilk siz haberdar olun!'
            },
            {
                icon: 'üí∞',
                title: 'G√ºvenli Bahis Deneyimi',
                description: 'Lisanslƒ± bahis sitesinde g√ºvenle oynayƒ±n. Y√ºksek oranlar, canlƒ± bahis ve anƒ±nda para √ßekme imkanƒ±!'
            },
            {
                icon: 'üõí',
                title: 'Online Alƒ±≈üveri≈ü',
                description: 'En uygun fiyatlarla teknoloji √ºr√ºnleri. √úcretsiz kargo ve hƒ±zlƒ± teslimat avantajƒ±!'
            },
            {
                icon: 'üì±',
                title: 'Mobil Uygulama',
                description: 'Film D√ºnyasƒ± mobil uygulamasƒ±nƒ± indirin. Offline izleme ve √∂zel i√ßerikler!'
            },
            {
                icon: 'üé¨',
                title: 'Premium √úyelik',
                description: 'Reklamsƒ±z izleme, 4K kalite ve erken eri≈üim i√ßin premium √ºye olun!'
            }
        ];

        const nativeAdElements = document.querySelectorAll('.ad-native');
        
        nativeAdElements.forEach((adElement, index) => {
            const randomAd = nativeAds[Math.floor(Math.random() * nativeAds.length)];
            
            const iconElement = adElement.querySelector('.ad-native-image');
            const titleElement = adElement.querySelector('.ad-native-title');
            const descElement = adElement.querySelector('.ad-native-description');
            
            if (iconElement && titleElement && descElement) {
                // Fade out
                adElement.style.opacity = '0.5';
                
                setTimeout(() => {
                    iconElement.textContent = randomAd.icon;
                    titleElement.textContent = randomAd.title;
                    descElement.textContent = randomAd.description;
                    
                    // Fade in
                    adElement.style.opacity = '1';
                }, 300);
            }
        });
    }

    // Event listeners
    setupEventListeners() {
        // Pencere boyutu deƒüi≈ütiƒüinde
        window.addEventListener('resize', () => {
            this.hideAdsOnMobile();
        });

        // Sayfa kapatƒ±lƒ±rken popup g√∂ster (exit intent)
        document.addEventListener('mouseleave', (e) => {
            if (e.clientY <= 0) {
                // Sadece bir kez g√∂ster ve cookie kontrol√º
                if (!this.exitIntentShown && !this.hasSeenExitIntentToday()) {
                    this.showExitIntentAd();
                    this.exitIntentShown = true;
                }
            }
        });

        // Reklam tƒ±klama takibi
        document.addEventListener('click', (e) => {
            if (e.target.closest('.ad-container')) {
                this.trackAdClick(e.target.closest('.ad-container'));
            }
        });
    }

    hasSeenExitIntentToday() {
        const lastShown = this.getCookie('filmdunyasi_exit_intent_shown');
        if (!lastShown) return false;
        
        const lastShownDate = new Date(parseInt(lastShown));
        const today = new Date();
        
        return lastShownDate.toDateString() === today.toDateString();
    }

    showExitIntentAd() {
        // Exit intent cookie'sini kaydet
        this.setCookie('filmdunyasi_exit_intent_shown', Date.now().toString(), 1);
        
        const exitAdHTML = `
            <div class="ad-popup-overlay" id="exitIntentAd">
                <div class="ad-popup-content">
                    <button class="ad-popup-close" onclick="adManager.closeExitIntent()">&times;</button>
                    <div style="text-align: center; padding: 20px;">
                        <h3 style="color: #e50914; margin-bottom: 15px;">üé¨ Bekle!</h3>
                        <p style="color: #ccc; margin-bottom: 20px;">
                            Gitmeden √∂nce premium √ºyeliƒüimizi incele!<br>
                            ƒ∞lk ay sadece 9.99‚Ç∫
                        </p>
                        <button style="background: #e50914; color: white; border: none; padding: 12px 24px; border-radius: 6px; cursor: pointer; font-weight: bold; margin-right: 10px;">
                            Premium Ol
                        </button>
                        <button onclick="adManager.closeExitIntent()" style="background: #333; color: white; border: none; padding: 12px 24px; border-radius: 6px; cursor: pointer;">
                            Hayƒ±r Te≈üekk√ºrler
                        </button>
                        <p style="color: #666; font-size: 11px; margin-top: 15px;">
                            Bu mesaj g√ºnde sadece bir kez g√∂sterilir
                        </p>
                    </div>
                </div>
            </div>
        `;

        document.body.insertAdjacentHTML('beforeend', exitAdHTML);
        document.getElementById('exitIntentAd').style.display = 'flex';
        
        console.log('üö™ Exit intent popup g√∂sterildi - Bir sonraki g√∂sterim: Yarƒ±n');
    }

    closeExitIntent() {
        const exitAd = document.getElementById('exitIntentAd');
        if (exitAd) {
            exitAd.style.display = 'none';
            exitAd.remove();
        }
    }

    trackAdClick(adElement) {
        const adType = this.getAdType(adElement);
        console.log(`üñ±Ô∏è Reklam Tƒ±klandƒ±: ${adType}`);
        
        // Ger√ßek projede analytics'e g√∂nder
        // gtag('event', 'ad_click', { ad_type: adType });
    }

    // AdSense entegrasyonu i√ßin hazƒ±r fonksiyonlar
    loadAdSense() {
        // AdSense script'ini y√ºkle
        const script = document.createElement('script');
        script.async = true;
        script.src = 'https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-XXXXXXXXXXXXXXXX';
        script.crossOrigin = 'anonymous';
        document.head.appendChild(script);
    }

    replaceWithAdSense(containerId, adSlot, adFormat = 'auto') {
        const container = document.getElementById(containerId);
        if (container) {
            container.innerHTML = `
                <ins class="adsbygoogle"
                     style="display:block"
                     data-ad-client="ca-pub-XXXXXXXXXXXXXXXX"
                     data-ad-slot="${adSlot}"
                     data-ad-format="${adFormat}"></ins>
            `;
            
            // AdSense'i ba≈ülat
            (adsbygoogle = window.adsbygoogle || []).push({});
        }
    }

    // A/B Test i√ßin reklam pozisyonlarƒ±
    runAdPositionTest() {
        const testGroup = Math.random() < 0.5 ? 'A' : 'B';
        
        if (testGroup === 'B') {
            // B grubunda farklƒ± reklam pozisyonlarƒ±
            const headerBanner = document.querySelector('.ad-header-banner');
            if (headerBanner) {
                headerBanner.style.position = 'sticky';
                headerBanner.style.top = '0';
                headerBanner.style.zIndex = '999';
            }
        }
        
        console.log(`üß™ A/B Test Grubu: ${testGroup}`);
    }

    // Test ama√ßlƒ± cookie temizleme (console'dan √ßaƒüƒ±rƒ±labilir)
    clearAdCookies() {
        this.setCookie('filmdunyasi_popup_shown', '', -1);
        this.setCookie('filmdunyasi_exit_intent_shown', '', -1);
        console.log('üßπ Reklam cookie\'leri temizlendi - Popup\'lar tekrar g√∂sterilecek');
        this.logCookieStatus();
    }

    // Test ama√ßlƒ± hemen popup g√∂ster (console'dan √ßaƒüƒ±rƒ±labilir)
    forceShowPopup() {
        console.log('üß™ Test ama√ßlƒ± popup g√∂steriliyor...');
        this.showPopupAd();
    }

    // Reklam √ßoƒüaltma fonksiyonu - Test i√ßin (console'dan √ßaƒüƒ±rƒ±labilir)
    multiplyAds(count = 3) {
        console.log(`üîÑ ${count} adet reklam √ßoƒüaltƒ±lƒ±yor...`);
        
        const headerBanner = document.querySelector('.ad-header-banner');
        const bottomBanner = document.querySelector('.ad-bottom-banner');
        
        if (headerBanner) {
            for (let i = 1; i <= count; i++) {
                const clone = headerBanner.cloneNode(true);
                clone.querySelector('.ad-text').textContent = `üé¨ √áoƒüaltƒ±lmƒ±≈ü Reklam ${i} üé¨`;
                headerBanner.parentNode.insertBefore(clone, headerBanner.nextSibling);
            }
        }
        
        if (bottomBanner) {
            for (let i = 1; i <= count; i++) {
                const clone = bottomBanner.cloneNode(true);
                clone.querySelector('.ad-text').textContent = `üéØ √áoƒüaltƒ±lmƒ±≈ü Alt Reklam ${i} üéØ`;
                bottomBanner.parentNode.insertBefore(clone, bottomBanner.nextSibling);
            }
        }
        
        console.log(`‚úÖ Reklamlar √ßoƒüaltƒ±ldƒ±! Sayfa y√ºksekliƒüi otomatik arttƒ±.`);
        console.log(`üìè Yeni sayfa y√ºksekliƒüi: ${document.body.scrollHeight}px`);
        console.log(`üí° Kullanƒ±m: adManager.clearMultipliedAds() ile temizleyebilirsiniz`);
    }

    // √áoƒüaltƒ±lmƒ±≈ü reklamlarƒ± temizle (console'dan √ßaƒüƒ±rƒ±labilir)
    clearMultipliedAds() {
        const allAds = document.querySelectorAll('.ad-header-banner, .ad-bottom-banner');
        let removedCount = 0;
        
        allAds.forEach((ad, index) => {
            const text = ad.querySelector('.ad-text');
            if (text && text.textContent.includes('√áoƒüaltƒ±lmƒ±≈ü')) {
                ad.remove();
                removedCount++;
            }
        });
        
        console.log(`üóëÔ∏è ${removedCount} adet √ßoƒüaltƒ±lmƒ±≈ü reklam temizlendi`);
        console.log(`üìè Yeni sayfa y√ºksekliƒüi: ${document.body.scrollHeight}px`);
    }
}

// Sayfa y√ºklendiƒüinde reklam sistemini ba≈ülat
document.addEventListener('DOMContentLoaded', () => {
    window.adManager = new AdManager();
});

// Lazy loading i√ßin intersection observer
function setupLazyAdLoading() {
    const lazyAds = document.querySelectorAll('.ad-container[data-lazy]');
    
    const adObserver = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                const ad = entry.target;
                // Lazy reklam y√ºkle
                loadLazyAd(ad);
                adObserver.unobserve(ad);
            }
        });
    });

    lazyAds.forEach(ad => adObserver.observe(ad));
}

function loadLazyAd(adElement) {
    // Lazy reklam y√ºkleme mantƒ±ƒüƒ±
    console.log('üîÑ Lazy reklam y√ºkleniyor...');
    
    // Placeholder'ƒ± ger√ßek reklamla deƒüi≈ütir
    setTimeout(() => {
        adElement.classList.add('loaded');
        console.log('‚úÖ Lazy reklam y√ºklendi');
    }, 1000);
}

// Reklam blocker tespiti
function detectAdBlocker() {
    const testAd = document.createElement('div');
    testAd.innerHTML = '&nbsp;';
    testAd.className = 'adsbox';
    testAd.style.position = 'absolute';
    testAd.style.left = '-10000px';
    document.body.appendChild(testAd);
    
    setTimeout(() => {
        if (testAd.offsetHeight === 0) {
            console.log('üö´ AdBlocker tespit edildi');
            showAdBlockerMessage();
        }
        document.body.removeChild(testAd);
    }, 100);
}

function showAdBlockerMessage() {
    const messageHTML = `
        <div style="position: fixed; top: 0; left: 0; width: 100%; background: #e50914; color: white; padding: 10px; text-align: center; z-index: 10001;">
            <p>üö´ Reklam engelleyici tespit edildi. Sitemizi desteklemek i√ßin l√ºtfen reklam engelleyiciyi kapatƒ±n.</p>
            <button onclick="this.parentElement.remove()" style="background: white; color: #e50914; border: none; padding: 5px 10px; border-radius: 3px; margin-left: 10px;">
                Kapat
            </button>
        </div>
    `;
    document.body.insertAdjacentHTML('afterbegin', messageHTML);
}

// Sayfa y√ºklendiƒüinde AdBlocker kontrol√º
window.addEventListener('load', () => {
    detectAdBlocker();
    setupLazyAdLoading();
}); 